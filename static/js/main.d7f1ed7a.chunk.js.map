{"version":3,"sources":["firebase-config.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","App","_useState","useState","_useState2","Object","slicedToArray","longitude","setLongitude","_useState3","_useState4","latitude","setLatitude","postsCollectionRef","collection","getLoc","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","navigator","geolocation","getCurrentPosition","position","coords","console","log","addDoc","stop","apply","this","arguments","react_default","a","createElement","className","src","onClick","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"0QAoBMA,EAAMC,YAXW,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMJC,GADKC,YAAaV,GACbW,YAAaX,qxMCWhBY,MA5Bf,WAAe,IAAAC,EAGmBC,mBAAS,IAH5BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGNK,EAHMH,EAAA,GAGII,EAHJJ,EAAA,GAAAK,EAIkBN,mBAAS,IAJ3BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAINE,EAJMD,EAAA,GAIGE,EAJHF,EAAA,GAQLG,EAAqBC,YAAWhB,EAAG,YACnCiB,EAAM,eAAAC,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,IAAAC,KAAG,SAAAC,IAAA,OAAAF,IAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACbC,UAAUC,YAAYC,mBAAmB,SAASC,GAChDpB,EAAaoB,EAASC,OAAOlB,UAC7BC,EAAYgB,EAASC,OAAOtB,aAE9BuB,QAAQC,IAAI,kBALCT,EAAAE,KAAA,EAMPQ,YAAOnB,EAAmB,CAACF,WAAWJ,cAN/B,wBAAAe,EAAAW,SAAAb,MAAH,yBAAAJ,EAAAkB,MAAAC,KAAAC,YAAA,GASd,OADErB,IAEAsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,+HAA+HD,UAAW,aACnJH,EAAAC,EAAAC,cAAA,UAAQG,QAAS3B,EAAQyB,UAAW,UAApC,WCfOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAhC,GAAiD,IAA9CkC,EAA8ClC,EAA9CkC,OAAQC,EAAsCnC,EAAtCmC,OAAQC,EAA8BpC,EAA9BoC,OAAQC,EAAsBrC,EAAtBqC,OAAQC,EAActC,EAAdsC,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtB,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,WAAP,KACEvB,EAAAC,EAAAC,cAACsB,EAAD,QAOJlB","file":"static/js/main.d7f1ed7a.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {getFirestore} from \"firebase/firestore\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDfklAp2n8ZdoG9iXCPsnGAOoNofrBGtRI\",\r\n  authDomain: \"geolocate-19cad.firebaseapp.com\",\r\n  projectId: \"geolocate-19cad\",\r\n  storageBucket: \"geolocate-19cad.appspot.com\",\r\n  messagingSenderId: \"526112953421\",\r\n  appId: \"1:526112953421:web:7bb717bcc24ead0b7f3804\",\r\n  measurementId: \"G-762ZK2PZ90\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nexport const db = getFirestore(app);","import './App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { addDoc, collection} from \"firebase/firestore\";\nimport { db } from \"./firebase-config\";\nfunction App() {\n\n \n  const [longitude,setLongitude] =useState(\"\");\n  const [latitude,setLatitude] = useState(\"\");\n\n   \n  \n    const postsCollectionRef = collection(db,\"location\");\n    const getLoc = async () => { \n      navigator.geolocation.getCurrentPosition(function(position) {\n        setLongitude(position.coords.latitude);\n        setLatitude(position.coords.longitude);\n      });\n      console.log(\"abhi is legend\");\n      await addDoc(postsCollectionRef,{latitude , longitude})\n    }\n    getLoc();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"https://upload.wikimedia.org/wikipedia/en/thumb/0/04/Facebook_f_logo_%282021%29.svg/800px-Facebook_f_logo_%282021%29.svg.png\" className={\"App-logo\"}></img>\n        <button onClick={getLoc} className={\"Button\"}>Next</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}